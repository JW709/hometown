{"version":3,"sources":["components/Forms/styles.js","api/index.js","actions/posts.js","components/Forms/PostForm.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","styles.js","App.js","reducers/index.js","reducers/posts.js","constants/actionTypes.js","index.js"],"names":["makeStyles","theme","root","margin","spacing","paper","padding","form","display","flexWrap","justifyContent","fileInput","width","buttonSubmit","marginBottom","API_URL","process","replace","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","PostForm","currentId","setCurrentId","post","useSelector","state","posts","find","p","_id","classes","useStyles","useState","title","caption","tags","selectedFile","postData","setPostData","dispatch","useDispatch","clear","useEffect","Paper","className","autoComplete","noValidate","onSubmit","e","preventDefault","api","data","type","payload","console","log","newPost","createPost","Typography","variant","TextField","name","label","value","fullWidth","onChange","target","split","multiple","onDone","base64","Button","submit","color","onClick","media","height","paddingTop","backgroundColor","palette","grey","backgroundBlendMode","border","fullHeightCard","card","flexDirection","borderRadius","position","overlay","top","left","overlay2","right","grid","details","cardActions","Post","Card","CardMedia","image","moment","createdAt","fromNow","style","size","fontSize","map","tag","CardContent","gutterBottom","CardActions","message","mainContainer","alignItems","smMargin","actionDiv","textAlign","Posts","key","appBar","heading","marginLeft","App","get","Container","maxWidth","AppBar","header","styles","Grow","in","Grid","container","item","xs","sm","combineReducers","action","filter","store","legacy_createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5953669.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));","import axios from 'axios'\n\nconst API_URL = (process.env.REACT_APP_API_URL || 'http://localhost:5000').replace(/\\/+$/, '')\n\nconst url = `${API_URL}/posts`\n\n\nexport const fetchPosts = () => axios.get(url);\nexport const createPost = (newPost) => axios.post(url, newPost);\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost)\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);","import Axios from 'axios';\nimport * as api from '../api';\n\n// api.fetchPosts()\n\n// Action creators\nexport const getPosts = () => async (dispatch) => {\n    try {\n        const { data } = await api.fetchPosts();\n\n        dispatch({ type: 'FETCH_ALL', payload: data })\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const { data } = await api.createPost(post);\n        dispatch({ type: 'CREATE', payload: data })\n    } catch (error) {\n        console.log(error)\n    }\n} \n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post)\n        dispatch({ type: 'UPDATE', payload: data })\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n      await api.deletePost(id);\n  \n      dispatch({ type: 'DELETE', payload: id });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };","import React, { useState, useEffect } from 'react';\nimport useStyles from './styles'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Typography, TextField, Button, Paper, Grid } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { createPost, updatePost } from '../../actions/posts'; \n\nconst PostForm = ({ currentId, setCurrentId }) => {\n\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\n\n    const classes = useStyles();\n    const [postData, setPostData] = useState({\n        title: '',\n        caption: '',\n        tags: '',\n        selectedFile: ''\n    });\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (currentId) {\n            dispatch(updatePost(currentId, postData))\n        }  else {\n            dispatch(createPost(postData));\n        };\n        clear()\n    };\n\n    const clear = () => {\n        setCurrentId(null);\n        setPostData({\n            title: '',\n            caption: '',\n            tags: '',\n            selectedFile: ''\n        });\n    };\n\n    useEffect(() => {\n        if (post) {\n            setPostData(post);\n        }\n    }, [post])\n\n    return(\n        <Paper className={classes.paper}>\n            <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">{currentId ? 'Edit Post' : 'Add Post'}</Typography>\n                {/* <TextField \n                    name=\"user\" \n                    label=\"Business\" \n                    variant=\"standard\" \n                    value={postData.user}\n                    fullWidth\n                    onChange={(e) => setPostData({ ...postData, user: e.target.value })}\n                    /> */}\n\n                <TextField \n                    name=\"title\" \n                    label=\"Title\" \n                    variant=\"standard\" \n                    value={postData.title}\n                    fullWidth\n                    onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n                    />\n\n                <TextField \n                    name=\"caption\" \n                    label=\"Caption\" \n                    variant=\"standard\" \n                    value={postData.caption}\n                    fullWidth\n                    onChange={(e) => setPostData({ ...postData, caption: e.target.value })}\n                    />   \n\n                <TextField \n                    name=\"tage\" \n                    label=\"Tags\" \n                    variant=\"standard\" \n                    value={postData.tags}\n                    fullWidth\n                    onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',')})}\n                    />\n\n                {/* TODO: Add Dropzone with img preview */}\n                <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n\n                <Button className={classes.submit} color=\"primary\" type=\"submit\" fullWidth>Post</Button>                \n                <Button color=\"secondary\" onClick={clear} fullWidth>Cancel</Button>                \n\n            </form>\n\n        </Paper>\n    )\n\n}\n\nexport default PostForm;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: theme.palette.grey[400],\n    backgroundBlendMode: 'darken',\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    position: 'relative',\n    marginBottom: theme.spacing(2)\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n}));","import React from 'react';\nimport useStyles from './styles';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\nimport { ThumbUpAltIcon } from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment-timezone'\nimport { useDispatch } from 'react-redux';\nimport { deletePost } from '../../../actions/posts';\n\n \nconst Post = ({ post, setCurrentId}) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    \n    console.log(post)\n\n    return(\n        <Card className={classes.card}> \n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title} />\n             <div className={classes.overlay}>\n                <Typography variant=\"h6\">{post.title}</Typography>\n                <Typography>{moment(post.createdAt).fromNow()}</Typography>\n            </div>\n            \n            <div className={classes.overlay2}>\n                <Button style={{ color: 'white' }} size=\"small\" onClick={() => setCurrentId(post._id)}><MoreHorizIcon fontSize=\"default\" /></Button>\n            </div>\n            \n            <div className={classes.details}>\n                <Typography variant=\"body2\" color=\"textSecondary\">{post.tags.map((tag) => `#${tag} `)}\n                </Typography>\n\n                 <CardContent>\n                    <Typography className={classes.title} variant=\"body2\" color=\"text-secondary\" gutterBottom>{post.caption}\n                    </Typography>\n                </CardContent>\n\n                {/* Complaining about this */}\n                <CardActions className={classes.cardActions}>\n\n                    {/* <Button size=\"small\" color=\"primary\" onClick={() => {}}>    \n                        <ThumbUpAltIcon fontSize=\"small\"/>\n                        Like\n                        {post.likeCount}\n                    </Button> */}\n\n                    <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}><DeleteIcon fontSize=\"small\" /> Delete</Button>\n\n                </CardActions> \n\n\n            </div> \n\n        </Card>\n    )\n\n}\n\nexport default Post;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));","import React from 'react';\nimport Post from './Post/Post';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport useStyles from './styles'\n\nimport { useSelector } from 'react-redux';\n\nconst Posts = ({ setCurrentId }) => {\n    const posts = useSelector((state) => state.posts)\n    const classes = useStyles();\n    console.log(posts)\n\n\n    return(\n         \n            // <Grid className={classes.container} container spacing={3}>\n\n                posts.map((post) => (\n                        <Post key={post._id} setCurrentId={setCurrentId} post={post} />\n                ))\n\n\n            // </Grid>\n        \n\n    )\n\n}\n\nexport default Posts;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  heading: {\n    color: 'rgba(0,183,255, 1)',\n  },\n  image: {\n    marginLeft: '15px',\n  },\n}));","import React, { useState, useEffect } from 'react';\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\nimport PostForm from './components/Forms/PostForm';\nimport Posts from './components/Posts/Posts';\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from './actions/posts';\nimport useStyles from './styles'\n\nconst App = () => {\n  const [currentId, setCurrentId] = useState(null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPosts()) \n\n  }, [currentId, dispatch])\n\n\n\n  return (\n    <Container maxWidth=\"lg\">\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.header} variant=\"h2\" styles={{ alignItems: 'center '}}>\n          Sample Business\n        </Typography>\n\n      </AppBar>\n      <Grow in>\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={8}>\n              <Posts setCurrentId={setCurrentId}/>\n            </Grid>\n\n            <Grid item xs={12} sm={4} >\n              <div style={{ position: 'sticky', top: 12 }}>\n                <PostForm currentId={currentId} setCurrentId={setCurrentId} />\n              </div>\n            </Grid>\n            \n          </Grid>\n      </Grow>\n\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport posts from './posts'\n\n\nexport default combineReducers({ posts })","import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map((post) => post._id === action.payload._id ? action.payload : post)\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n\n    default:\n      return posts;\n  }\n};","export const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const LIKE = 'LIKE';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'; \nimport { legacy_createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport './index.css'\n\n\nconst store = legacy_createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />,\n   </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}